[{"F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\index.js":"1","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\App.js":"2","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\reportWebVitals.js":"3","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\Sidebar.js":"4","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\Chat.js":"5","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\SidebarChat.js":"6","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\axios.js":"7","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\Login.js":"8","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\reducer.js":"9","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\StateProvider.js":"10"},{"size":710,"mtime":1610372856269,"results":"11","hashOfConfig":"12"},{"size":1388,"mtime":1610376082338,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2260,"mtime":1610376239839,"results":"15","hashOfConfig":"12"},{"size":3292,"mtime":1610391345244,"results":"16","hashOfConfig":"12"},{"size":1233,"mtime":1610347102425,"results":"17","hashOfConfig":"12"},{"size":133,"mtime":1610105081764,"results":"18","hashOfConfig":"12"},{"size":953,"mtime":1610397651635,"results":"19","hashOfConfig":"12"},{"size":438,"mtime":1610349044559,"results":"20","hashOfConfig":"12"},{"size":402,"mtime":1610375805723,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ikw82h",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\index.js",[],["49","50"],"F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\App.js",["51","52"],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from \"./Login\";\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport Pusher from 'pusher-js';\nimport axios from './axios';\nimport { BrowserRouter as Router, Route, Switch, useParams } from \"react-router-dom\";\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\nconst [message, setMessage] = useState([]);\n\n\n  useEffect(() => {\n    axios.get('/messages/sync')\n    .then(response => {\n      setMessage(response.data);\n    })\n  }, [])\n\n  useEffect(() => {\n    const pusher = new Pusher('c6e327ce193d85341260', {\n      cluster: 'ap2'\n    });\n\n    const channel = pusher.subscribe('messages');\n    channel.bind('inserted', (newMessage) => {\n      // alert(JSON.stringify(newMessage));\n      setMessage([...message, newMessage]);\n    });\n    \n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();  \n    };\n  }, [message]);\n\n  console.log(message);\n\n\n  return (\n    <div className=\"app\">\n    {!user ? (\n      <Login />\n    ) : (\n\n      <div className=\"app__body\">\n      \n    <Router>\n    <Sidebar />\n      <Switch>\n      <Route path=\"/rooms/:roomId\">\n      <Chat \n      message={message}\n      />\n      </Route>\n      \n      \n\n      </Switch>\n    </Router>\n    </div>\n    )}\n  </div>\n    \n  );\n}\n\nexport default App;\n","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\reportWebVitals.js",[],"F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\Sidebar.js",["53"],"import React, { useEffect, useState } from 'react';\r\nimport \"./Sidebar.css\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport axios from './axios';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\n\r\nfunction Sidebar() {    \r\n    const [{}, dispatch] = useStateValue();\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/rooms/sync')\r\n    .then(response => {\r\n      setRooms(response.data);\r\n    })\r\n    }, [rooms])\r\n\r\n    const logOut = () =>{\r\n        dispatch({\r\n            type: actionTypes.SET_USER,\r\n            user: null,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            \r\n            <div className=\"sidebar__header\">\r\n                <IconButton>\r\n                <Avatar src=\"https://pbs.twimg.com/profile_images/1057850240236105728/hp3IKSk8_400x400.jpg\" />\r\n                </IconButton>\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton onClick={logOut}>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search or start new Chat\" type=\"text\" />\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map((rooms) => (\r\n                <SidebarChat key={rooms.id} id={rooms._id} roomName={rooms.room}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\Chat.js",["54"],"import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, InsertEmoticon, Mic, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport \"./Chat.css\";\r\nimport axios from './axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Chat({ message }) {\r\n    const messageEl = useRef(null);\r\n    const [input, setInput] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [msgs, setMsgs] = useState([]);\r\n     \r\n    useEffect(() => {\r\n        if (messageEl) {\r\n          messageEl.current.addEventListener('DOMNodeInserted', event => {\r\n            const { currentTarget: target } = event;\r\n            target.scroll({ top: target.scrollHeight, behavior: 'smooth' });\r\n          });\r\n        }\r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            axios.get('/rooms/sync')\r\n            .then(response => {\r\n            setRoomName(response.data.find( record => record._id === roomId ).room);\r\n            setMsgs(response.data.find( record => record._id === roomId ).messages);\r\n            \r\n\r\n    })\r\n        }\r\n        console.log(msgs);\r\n    }, [roomId])\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await axios.post(\"/messages/new\", {\r\n            message: input,\r\n            name: \"shubham\",\r\n            timestamp: \"just now.\",\r\n            received: true\r\n        });\r\n\r\n        setInput('');\r\n    }\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/4.5/api/male/${roomId}.svg`} />\r\n\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen at..</p>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton> \r\n                        <SearchOutlined />   \r\n                    </IconButton>\r\n\r\n                    <IconButton> \r\n                        <AttachFile />   \r\n                    </IconButton>\r\n\r\n                    <IconButton> \r\n                        <MoreVert />   \r\n                    </IconButton>   \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat__body\" ref={messageEl}>\r\n                \r\n                {msgs.map((msgs) => (\r\n                <p className={`chat__message ${msgs.received && \"chat__receiver\"}`}>\r\n                <span className=\"chat__name\">{msgs.name}</span>\r\n                {msgs.message}\r\n\r\n                <span className=\"chat__timestamp\">\r\n                    {msgs.timestamp}\r\n                </span>\r\n            </p>\r\n                ))}\r\n                \r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticon />\r\n                <form>\r\n                    <input value={input} onChange={e => setInput(e.target.value)}\r\n                    placeholder=\"Type a message\" \r\n                    type=\"text\" />\r\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n                <Mic />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\SidebarChat.js",["55"],"import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport \"./SidebarChat.css\";\r\nimport axios from './axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SidebarChat({ addNewChat, roomName, id }) {\r\n    const [seed, setSeed] = useState('askdlasdhajh');\r\n\r\n\r\n    useEffect(() => {\r\n        setSeed(id);\r\n    }, [])\r\n\r\n    const createChat = async() => {\r\n        const roomName = prompt(\"Please enter name for chat\");\r\n\r\n        if(roomName) { \r\n            await axios.post(\"/rooms/create\", {\r\n                room: roomName\r\n            });\r\n        }\r\n            // do some clever database stuff here...\r\n        \r\n        }\r\n    \r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n        <div className=\"sidebarChat\">\r\n            <Avatar src={`https://avatars.dicebear.com/4.5/api/male/${seed}.svg`} />\r\n            <div className=\"sidebarChat__info\">\r\n                <h2>{roomName}</h2>\r\n                <p> last msg on room</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    ): (\r\n        <div onClick={createChat}\r\n        className=\"sidebarChat\">\r\n            <h2>Add new Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n",["56","57"],"F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\axios.js",[],"F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\Login.js",["58"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport \"./Login.css\";\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        dispatch({\r\n            type: actionTypes.SET_USER,\r\n            user: 'true',\r\n        });\r\n\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n            <img \r\n                src=\"https://icon-library.com/images/chat-room-icon/chat-room-icon-7.jpg\"\r\n                alt=\"\"\r\n                />\r\n\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to Chat-Room</h1>\r\n\r\n                </div>\r\n\r\n                <Button onClick={signIn}>\r\n                    Sign In\r\n                </Button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\reducer.js",[],"F:\\DATA\\Projects\\JS\\react\\chat-room\\chat-room\\src\\StateProvider.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":8,"column":50,"nodeType":"65","messageId":"66","endLine":8,"endColumn":59},{"ruleId":"63","severity":1,"message":"67","line":12,"column":20,"nodeType":"65","messageId":"66","endLine":12,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":15,"column":12,"nodeType":"70","messageId":"71","endLine":15,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":35,"column":8,"nodeType":"74","endLine":35,"endColumn":16,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":13,"column":8,"nodeType":"74","endLine":13,"endColumn":10,"suggestions":"77"},{"ruleId":"59","replacedBy":"78"},{"ruleId":"61","replacedBy":"79"},{"ruleId":"68","severity":1,"message":"69","line":8,"column":12,"nodeType":"70","messageId":"71","endLine":8,"endColumn":14},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'msgs'. Either include it or remove the dependency array.","ArrayExpression",["82"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. If 'setSeed' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["83"],["80"],["81"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [msgs, roomId]",{"range":"88","text":"89"},"Update the dependencies array to be: [id]",{"range":"90","text":"91"},[1224,1232],"[msgs, roomId]",[366,368],"[id]"]